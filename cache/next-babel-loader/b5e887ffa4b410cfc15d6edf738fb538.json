{"ast":null,"code":"var _jsxFileName = \"/home/naya/Cursos/Platzi/Are-Passion-Store-con-Nextjs/components/ProductList/ProductList.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport Link from 'next/link';\nconst mapProductsToCards = products => products.map(({\n  name,\n  id,\n  price,\n  image\n}) => __jsx(Link, {\n  key: id,\n  href: \"/product/[id]\",\n  as: `/product/${id}`,\n  passHref: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, __jsx(Card, {\n  color: \"yellow\",\n  as: \"a\",\n  header: name,\n  image: image,\n  meta: __jsx(Card.Meta, {\n    style: {\n      color: 'dimgray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 15\n    }\n  }, price),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }\n})));\nconst ProductList = ({\n  products\n}) => __jsx(Card.Group, {\n  itemsPerRow: 2,\n  stackable: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }\n}, mapProductsToCards(products));\nexport default ProductList;","map":{"version":3,"names":["React","Card","Link","mapProductsToCards","products","map","name","id","price","image","color","ProductList"],"sources":["/home/naya/Cursos/Platzi/Are-Passion-Store-con-Nextjs/components/ProductList/ProductList.tsx"],"sourcesContent":["import React from 'react'\nimport { Card } from 'semantic-ui-react'\nimport Link from 'next/link'\n\ntype ProductListProps = {\n  products: TProduct[]\n}\n\nconst mapProductsToCards = (products: TProduct[]) =>\n  products.map(({ name, id, price, image }) => (\n    <Link key={id} href=\"/product/[id]\" as={`/product/${id}`} passHref>\n      <Card\n        color='yellow'\n        as=\"a\"\n        header={name}\n        image={image}\n        meta={<Card.Meta style={{ color: 'dimgray' }}>{price}</Card.Meta>}\n      />\n    </Link>\n  ))\n\nconst ProductList = ({ products }: ProductListProps) => (\n  <Card.Group itemsPerRow={2} stackable>\n    {mapProductsToCards(products)}\n  </Card.Group>\n)\n\nexport default ProductList\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,mBAAmB;AACxC,OAAOC,IAAI,MAAM,WAAW;AAM5B,MAAMC,kBAAkB,GAAIC,QAAoB,IAC9CA,QAAQ,CAACC,GAAG,CAAC,CAAC;EAAEC,IAAI;EAAEC,EAAE;EAAEC,KAAK;EAAEC;AAAM,CAAC,KACtC,MAAC,IAAI;EAAC,GAAG,EAAEF,EAAG;EAAC,IAAI,EAAC,eAAe;EAAC,EAAE,EAAG,YAAWA,EAAG,EAAE;EAAC,QAAQ;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GAChE,MAAC,IAAI;EACH,KAAK,EAAC,QAAQ;EACd,EAAE,EAAC,GAAG;EACN,MAAM,EAAED,IAAK;EACb,KAAK,EAAEG,KAAM;EACb,IAAI,EAAE,MAAC,IAAI,CAAC,IAAI;IAAC,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAU,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEF,KAAK,CAAc;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EAClE,CAEL,CAAC;AAEJ,MAAMG,WAAW,GAAG,CAAC;EAAEP;AAA2B,CAAC,KACjD,MAAC,IAAI,CAAC,KAAK;EAAC,WAAW,EAAE,CAAE;EAAC,SAAS;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GAClCD,kBAAkB,CAACC,QAAQ,CAAC,CAEhC;AAED,eAAeO,WAAW"},"metadata":{},"sourceType":"module"}