{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/home/naya/Cursos/Platzi/Are-Passion-Store-con-Nextjs/components/ProductList/ProductList.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport Link from 'next/link';\nvar mapProductsToCards = function mapProductsToCards(products) {\n  return products.map(function (_ref) {\n    var name = _ref.name,\n      id = _ref.id,\n      price = _ref.price,\n      image = _ref.image;\n    return __jsx(Link, {\n      key: id,\n      href: \"/product/[id]\",\n      as: \"/product/\".concat(id),\n      passHref: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }\n    }, __jsx(Card, {\n      color: \"yellow\",\n      as: \"a\",\n      header: name,\n      image: image,\n      meta: __jsx(Card.Meta, {\n        style: {\n          color: 'dimgray'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }\n      }, price),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }));\n  });\n};\nvar ProductList = function ProductList(_ref2) {\n  var products = _ref2.products;\n  return __jsx(Card.Group, {\n    itemsPerRow: 2,\n    stackable: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, mapProductsToCards(products));\n};\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","Card","Link","mapProductsToCards","products","map","name","id","price","image","color","ProductList"],"sources":["/home/naya/Cursos/Platzi/Are-Passion-Store-con-Nextjs/components/ProductList/ProductList.tsx"],"sourcesContent":["import React from 'react'\nimport { Card } from 'semantic-ui-react'\nimport Link from 'next/link'\n\ntype ProductListProps = {\n  products: TProduct[]\n}\n\nconst mapProductsToCards = (products: TProduct[]) =>\n  products.map(({ name, id, price, image }) => (\n    <Link key={id} href=\"/product/[id]\" as={`/product/${id}`} passHref>\n      <Card\n        color='yellow'\n        as=\"a\"\n        header={name}\n        image={image}\n        meta={<Card.Meta style={{ color: 'dimgray' }}>{price}</Card.Meta>}\n      />\n    </Link>\n  ))\n\nconst ProductList = ({ products }: ProductListProps) => (\n  <Card.Group itemsPerRow={2} stackable>\n    {mapProductsToCards(products)}\n  </Card.Group>\n)\n\nexport default ProductList\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,mBAAmB;AACxC,OAAOC,IAAI,MAAM,WAAW;AAM5B,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,CAAIC,QAAoB;EAAA,OAC9CA,QAAQ,CAACC,GAAG,CAAC;IAAA,IAAGC,IAAI,QAAJA,IAAI;MAAEC,EAAE,QAAFA,EAAE;MAAEC,KAAK,QAALA,KAAK;MAAEC,KAAK,QAALA,KAAK;IAAA,OACpC,MAAC,IAAI;MAAC,GAAG,EAAEF,EAAG;MAAC,IAAI,EAAC,eAAe;MAAC,EAAE,qBAAcA,EAAE,CAAG;MAAC,QAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAChE,MAAC,IAAI;MACH,KAAK,EAAC,QAAQ;MACd,EAAE,EAAC,GAAG;MACN,MAAM,EAAED,IAAK;MACb,KAAK,EAAEG,KAAM;MACb,IAAI,EAAE,MAAC,IAAI,CAAC,IAAI;QAAC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAU,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAEF,KAAK,CAAc;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAClE,CACG;EAAA,CACR,CAAC;AAAA;AAEJ,IAAMG,WAAW,GAAG,SAAdA,WAAW;EAAA,IAAMP,QAAQ,SAARA,QAAQ;EAAA,OAC7B,MAAC,IAAI,CAAC,KAAK;IAAC,WAAW,EAAE,CAAE;IAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAClCD,kBAAkB,CAACC,QAAQ,CAAC,CAClB;AAAA,CACd;AAAA,KAJKO,WAAW;AAMjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}